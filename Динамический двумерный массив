#include <iostream>
#include <Windows.h>
#include <time.h>
#include <stdlib.h>
#include <fstream>
#include <string>
#include <conio.h>
#include <iomanip>
#include <cassert>

using namespace std;
class Dyn2DArr
{
	int sizeY;
	int sizeX;
public:
	int** data;
	Dyn2DArr(int nSizeY, int nSizeX) :
		sizeY{ nSizeY }, sizeX{ nSizeX }, data{ new int* [nSizeY] }
	{
		/*
			выделеяем блок памяти для хранения всех елементов
			двумерного динамического массива
		*/
		int* dataElemaents{ new int[sizeY * sizeX] };
		for (int y = 0; y < sizeY; y++)
		{
			// "нарезаем" блок построчно
			data[y] = dataElemaents + y * sizeX;
		}
	}
	void print()const
	{
		for (int y = 0; y < sizeY; y++)
		{
			for (int x = 0; x < sizeX; x++)
			{
				cout << data[y][x] << '\t';
			}
			cout << '\n';
		}
		cout << '\n';
	}
	~Dyn2DArr()
	{
		/*
			адрес большого блока dataelements
			в конструкторе совпадает с адресом первой строки 
			нашего двумерного динамического массива.
			сперва освобождаем память из-под элементов массива, затем - память контейнера строк
		
		*/
		delete data[0];
		delete[] data;
	}
};

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	srand(time(NULL));
	int rows{ 3 };
	int columns{ 3 };
	int counter{ 1 };
	Dyn2DArr arr2d{ rows, columns };
	for (int y = 0; y < rows; y++)
	{
		for (int x = 0; x < columns; x++)
		{
			arr2d.data[y][x] = counter++;
		}
	}
	arr2d.print();	
	return 0;
}	
